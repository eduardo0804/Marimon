@model FavoritosViewModel
@{
    ViewData["Title"] = "Mis Favoritos";
}

<div class="container-fluid py-4">
    <div class="row">
        < <div class="col-12">
            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-0">
                        <i class="fas fa-heart text-danger me-2"></i>
                        Mis Favoritos
                    </h2>
                    <small class="text-muted">@Model.TotalFavoritos autopartes guardadas</small>
                </div>

                <!-- Buscador -->
                <div class="search-container" style="width: 350px;">
                    <form asp-action="Index" method="get" class="d-flex">
                        <div class="input-group">
                            <input type="text" name="buscar" value="@Model.TerminoBusqueda" class="form-control"
                                placeholder="Buscar en favoritos..." id="searchInput">
                            <button class="btn btn-outline-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                            @if (!string.IsNullOrEmpty(Model.TerminoBusqueda))
                            {
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="fas fa-times"></i>
                                </a>
                            }
                        </div>
                    </form>
                </div>
            </div>

            <!-- Mensajes de estado -->
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Contenido principal -->
            <div id="favoritosContainer">
                @if (!string.IsNullOrEmpty(Model.MensajeEstado))
                {
                    <div class="text-center py-5">
                        <i class="fas fa-heart fa-4x text-muted mb-4"></i>
                        <h4 class="text-muted mb-3">@Model.MensajeEstado</h4>
                        @if (string.IsNullOrEmpty(Model.TerminoBusqueda))
                        {
                            <p class="text-muted mb-4">Empieza a agregar autopartes a tus favoritos para verlas aquí</p>
                            <a href="@Url.Action("Index", "Autopartes")" class="btn btn-primary btn-lg">
                                <i class="fas fa-search me-2"></i>
                                Explorar Autopartes
                            </a>
                        }
                        else
                        {
                            <p class="text-muted mb-4">Intenta con otros términos de búsqueda</p>
                            <a href="@Url.Action("Index")" class="btn btn-outline-primary">
                                <i class="fas fa-arrow-left me-2"></i>
                                Ver todos los favoritos
                            </a>
                        }
                    </div>
                }
                else
                {
                    @Html.Partial("_FavoritosLista", Model.Favoritos)
                }
            </div>
    </div>
</div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Búsqueda en tiempo real
            let searchTimeout;
            $('#searchInput').on('input', function () {
                clearTimeout(searchTimeout);
                const termino = $(this).val().trim();

                searchTimeout = setTimeout(function () {
                    if (termino.length >= 2 || termino.length === 0) {
                        buscarFavoritos(termino);
                    }
                }, 500);
            });
        });

        function buscarFavoritos(termino) {
            $.get('@Url.Action("Buscar")', { termino: termino })
                .done(function (data) {
                    $('#favoritosContainer').html(data);
                })
                .fail(function () {
                    mostrarNotificacion('Error al buscar favoritos', 'error');
                });
        }

        // Función para eliminar favorito
        function eliminarFavorito(autoparteId) {
            if (confirm('¿Estás seguro de que deseas eliminar esta autoparte de favoritos?')) {
                $.post('@Url.Action("Eliminar")', {
                    autoparteId: autoparteId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                    .done(function (response) {
                        if (response.success) {
                            mostrarNotificacion(response.message, 'success');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            mostrarNotificacion(response.message, 'error');
                        }
                    })
                    .fail(function () {
                        mostrarNotificacion('Error al eliminar favorito', 'error');
                    });
            }
        }

        // Función para toggle favorito (usar en otras vistas)
        function toggleFavorito(autoparteId, button) {
            const $button = $(button);
            const originalHtml = $button.html();

            // Mostrar loading
            $button.html('<i class="fas fa-spinner fa-spin"></i>').prop('disabled', true);

            $.post('@Url.Action("Toggle")', {
                autoparteId: autoparteId,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
                .done(function (response) {
                    if (response.success) {
                        if (response.esFavorito) {
                            $button.removeClass('btn-outline-danger').addClass('btn-danger');
                            $button.html('<i class="fas fa-heart"></i>');
                            $button.attr('title', 'Eliminar de favoritos');
                        } else {
                            $button.removeClass('btn-danger').addClass('btn-outline-danger');
                            $button.html('<i class="far fa-heart"></i>');
                            $button.attr('title', 'Agregar a favoritos');
                        }
                        mostrarNotificacion(response.message, 'success');
                    } else {
                        $button.html(originalHtml);
                        mostrarNotificacion(response.message, 'error');
                    }
                })
                .fail(function () {
                    $button.html(originalHtml);
                    mostrarNotificacion('Error al procesar la solicitud', 'error');
                })
                .always(function () {
                    $button.prop('disabled', false);
                });
        }

        function mostrarNotificacion(mensaje, tipo) {
            const alertClass = tipo === 'error' ? 'alert-danger' : 'alert-success';
            const iconClass = tipo === 'error' ? 'fa-exclamation-circle' : 'fa-check-circle';

            const alertHtml = `
                    <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
                         style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
                        <i class="fas ${iconClass} me-2"></i>
                        ${mensaje}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;

            $('body').append(alertHtml);

            setTimeout(() => {
                $('.alert').alert('close');
            }, 5000);
        }
    </script>
}