@model Marimon.Models.ViewModels.OfertasViewModel

@{
    Layout = "_LayoutVentas";
    ViewData["Title"] = "Gestión de Ofertas";
}

<link rel="stylesheet" href="~/css/ofertas.css" asp-append-version="true" />

<ol class="breadcrumb m-0 py-2">
    <li class="breadcrumb-item">
        <a asp-area="" asp-controller="Personal_Ventas" asp-action="Index">Modulo de Autopartes</a>
    </li>
    <li class="breadcrumb-item active" aria-current="page">Ofertas</li>
</ol>

<!-- Mensajes de éxito/error -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Info"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Info"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid mt-2">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Listado de Productos</h3>
                    <div class="action-buttons">
                        <button type="button" id="btnAplicarOferta" class="btn btn-success">
                            <i class="fas fa-tag"></i> Aplicar Oferta
                        </button>
                        <button type="button" id="btnEditarOferta" class="btn btn-primary">
                            <i class="fas fa-edit"></i> Editar
                        </button>
                        <button type="submit" form="productosForm" name="action" value="eliminar" class="btn btn-danger" 
                                onclick="return confirm('¿Está seguro de que desea eliminar las ofertas seleccionadas?')">
                            <i class="fas fa-trash"></i> Eliminar
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <form id="productosForm" asp-controller="Ofertas" asp-action="Index" method="post">
                        <div style="height: 700px; overflow-y: auto;" id="tablaContainer">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark sticky-top">
                                    <tr>
                                        <th>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="selectAll">
                                                <label class="form-check-label" for="selectAll">Todos</label>
                                            </div>
                                        </th>
                                        <th>ID</th>
                                        <th>Imagen</th>
                                        <th>Nombre</th>
                                        <th>Categoría</th>
                                        <th>Precio Original</th>
                                        <th>% Oferta</th>
                                        <th>Precio Oferta</th>
                                        <th>Descripción Oferta</th>
                                        <th>Fecha Inicio</th>
                                        <th>Fecha Fin</th>
                                        <th>Estado</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var autoparte in Model.Autopartes)
                                    {
                                        <tr>
                                            <td>
                                                <div class="form-check">
                                                    <input class="form-check-input producto-check" type="checkbox" 
                                                           name="productosSeleccionados" value="@autoparte.aut_id" 
                                                           id="check_@autoparte.aut_id"
                                                           data-oferta-id="@autoparte.OfertaId"
                                                           data-tiene-oferta="@(autoparte.OfertaActiva.HasValue ? "true" : "false")">
                                                </div>
                                            </td>
                                            <td>@autoparte.aut_id</td>
                                            <td>
                                                <img src="@autoparte.aut_imagen" alt="@autoparte.aut_nombre" 
                                                     class="img-thumbnail" style="max-width: 60px; max-height: 60px;">
                                            </td>
                                            <td>@autoparte.aut_nombre</td>
                                            <td>@autoparte.CategoriaNombre</td>
                                            <td>S/. @autoparte.aut_precio.ToString("0.00")</td>
                                            <td>
                                                @if (autoparte.PorcentajeOferta.HasValue)
                                                {
                                                    <span class="text-success">@autoparte.PorcentajeOferta.Value.ToString("0.00")%</span>
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (autoparte.PrecioOferta.HasValue)
                                                {
                                                    <span class="text-success">S/. @autoparte.PrecioOferta.Value.ToString("0.00")</span>
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(autoparte.DescripcionOferta))
                                                {
                                                    <span>@autoparte.DescripcionOferta</span>
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (autoparte.FechaInicio.HasValue)
                                                {
                                                    <span>@autoparte.FechaInicio.Value.ToString("dd/MM/yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (autoparte.FechaFin.HasValue)
                                                {
                                                    <span>@autoparte.FechaFin.Value.ToString("dd/MM/yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (autoparte.OfertaActiva.HasValue)
                                                {
                                                    @if (autoparte.OfertaActiva.Value)
                                                    {
                                                        <span class="badge bg-success">Activo</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger">Inactivo</span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span>-</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Formulario oculto para editar -->
                        <div id="editarForm">
                            <input type="hidden" name="action" id="actionInput" value="">
                        </div>
                    </form>

                    <div class="mt-4">
                        <div class="d-flex justify-content-center align-items-center">
                            <p>Productos en stock: @Model.TotalProductosEnStock productos disponibles</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal para agregar ofertas en batch -->
<div class="modal fade" id="modalOfertaBatch" tabindex="-1" aria-labelledby="modalOfertaBatchLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formOfertaBatch" asp-controller="Ofertas" asp-action="Index" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalOfertaBatchLabel">Aplicar Oferta a Productos Seleccionados</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="descripcionOferta" class="form-label">Descripción de la oferta</label>
                        <input type="text" class="form-control" id="descripcionOferta" name="ofe_descripcion" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="porcentajeBatch" class="form-label">Porcentaje de descuento (%)</label>
                        <input type="number" class="form-control" id="porcentajeBatch" name="ofe_porcentaje" min="1" max="99" step="0.01" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="fechaInicioBatch" class="form-label">Fecha de inicio</label>
                        <input type="date" class="form-control" id="fechaInicioBatch" name="ofe_fecha_inicio" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="fechaFinBatch" class="form-label">Fecha de fin</label>
                        <input type="date" class="form-control" id="fechaFinBatch" name="ofe_fecha_fin" required>
                    </div>
                    
                    <!-- Campo oculto para indicar la acción -->
                    <input type="hidden" name="action" value="aplicar">
                    
                    <!-- Campos ocultos para los productos seleccionados -->
                    <div id="productosSeleccionadosContainer"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Guardar Oferta</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
document.addEventListener('DOMContentLoaded', function() {
    const selectAllCheckbox = document.getElementById('selectAll');
    const productoCheckboxes = document.querySelectorAll('.producto-check');
    const tablaContainer = document.getElementById('tablaContainer');
    const btnAplicarOferta = document.getElementById('btnAplicarOferta');
    const btnEditarOferta = document.getElementById('btnEditarOferta');
    const modalOfertaBatch = new bootstrap.Modal(document.getElementById('modalOfertaBatch'));
    const formProductos = document.getElementById('productosForm');
    const actionInput = document.getElementById('actionInput');
    
    // Función para marcar/desmarcar todos los checkboxes
    selectAllCheckbox.addEventListener('change', function() {
        const isChecked = this.checked;
        productoCheckboxes.forEach(checkbox => {
            checkbox.checked = isChecked;
        });
    });
    
    // Verificar si todos los checkboxes están marcados
    function updateSelectAllCheckbox() {
        const totalCheckboxes = productoCheckboxes.length;
        const checkedCount = Array.from(productoCheckboxes).filter(checkbox => checkbox.checked).length;
        
        selectAllCheckbox.checked = totalCheckboxes > 0 && checkedCount === totalCheckboxes;
        selectAllCheckbox.indeterminate = checkedCount > 0 && checkedCount < totalCheckboxes;
    }
    
    // Agregar evento a cada checkbox individual
    productoCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', updateSelectAllCheckbox);
    });

    // Manejar el botón "Aplicar Oferta"
    btnAplicarOferta.addEventListener('click', function() {
        const productosSeleccionados = Array.from(productoCheckboxes)
            .filter(checkbox => checkbox.checked)
            .map(checkbox => checkbox.value);
        
        if (productosSeleccionados.length === 0) {
            alert('Debe seleccionar al menos un producto para aplicar la oferta.');
            return;
        }
        
        // Limpiar el contenedor de productos seleccionados
        const container = document.getElementById('productosSeleccionadosContainer');
        container.innerHTML = '';
        
        // Agregar campos ocultos para cada producto seleccionado
        productosSeleccionados.forEach(function(productoId) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'productosSeleccionados';
            input.value = productoId;
            container.appendChild(input);
        });
        
        // Configurar fechas por defecto
        const today = new Date();
        const endDate = new Date();
        endDate.setDate(today.getDate() + 30); // Por defecto, 30 días de oferta
        
        document.getElementById('fechaInicioBatch').valueAsDate = today;
        document.getElementById('fechaFinBatch').valueAsDate = endDate;
        
        // Mostrar el modal
        modalOfertaBatch.show();
    });
    
    // NUEVO: Manejar el botón "Editar Oferta"
    btnEditarOferta.addEventListener('click', function() {
        const productosSeleccionados = Array.from(productoCheckboxes)
            .filter(checkbox => checkbox.checked);
        
        if (productosSeleccionados.length === 0) {
            alert('Debe seleccionar un producto para editar su oferta.');
            return;
        }
        
        if (productosSeleccionados.length > 1) {
            alert('Solo puede editar una oferta a la vez. Seleccione un solo producto.');
            return;
        }
        
        const productoSeleccionado = productosSeleccionados[0];
        const tieneOferta = productoSeleccionado.dataset.tieneOferta === "true";
        
        if (!tieneOferta) {
            alert('El producto seleccionado no tiene ninguna oferta para editar.');
            return;
        }
        
        // Preparar el formulario para la acción de editar
        actionInput.value = "editar";
        
        // Enviar el formulario
        formProductos.submit();
    });

    // Validar antes de enviar el formulario cuando es para eliminar
    if (formProductos) {
        formProductos.addEventListener('submit', function(e) {
            // Solo validamos si es eliminar, el resto se maneja por botones personalizados
            if (e.submitter && e.submitter.value === 'eliminar') {
                const productosSeleccionados = Array.from(document.querySelectorAll('.producto-check:checked')).map(c => c.value);
                
                if (productosSeleccionados.length === 0) {
                    e.preventDefault();
                    alert('Debe seleccionar al menos un producto para eliminar su oferta.');
                    return false;
                }
                
                const mensaje = productosSeleccionados.length === 1 
                    ? '¿Está seguro de que desea eliminar la oferta del producto seleccionado?' 
                    : `¿Está seguro de que desea eliminar las ofertas de los ${productosSeleccionados.length} productos seleccionados?`;
                
                if (!confirm(mensaje)) {
                    e.preventDefault();
                    return false;
                }
            }
        });
    }

    // Función para scroll con tecla presionada
    let isScrollMode = false;
    let isDragging = false;
    let startY = 0;
    let scrollStartY = 0;

    // Cambiar cursor y activar modo scroll al presionar la tecla (por ejemplo, Ctrl)
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && !isScrollMode) {
            isScrollMode = true;
            tablaContainer.style.cursor = 'grab';
        }
    });

    // Desactivar modo scroll al soltar la tecla
    document.addEventListener('keyup', function(e) {
        if (!e.ctrlKey && isScrollMode) {
            isScrollMode = false;
            isDragging = false;
            tablaContainer.style.cursor = 'default';
        }
    });

    // Eventos de mouse para el scroll manual
    tablaContainer.addEventListener('mousedown', function(e) {
        if (isScrollMode) {
            isDragging = true;
            startY = e.clientY;
            scrollStartY = tablaContainer.scrollTop;
            tablaContainer.style.cursor = 'grabbing';
            e.preventDefault();
        }
    });

    document.addEventListener('mousemove', function(e) {
        if (isDragging && isScrollMode) {
            const deltaY = startY - e.clientY;
            tablaContainer.scrollTop = scrollStartY + deltaY;
            e.preventDefault();
        }
    });

    document.addEventListener('mouseup', function() {
        if (isDragging && isScrollMode) {
            isDragging = false;
            tablaContainer.style.cursor = 'grab';
        }
    });

    // Evitar la selección de texto durante el arrastre
    tablaContainer.addEventListener('selectstart', function(e) {
        if (isScrollMode) {
            e.preventDefault();
        }
    });
});
    </script>
}