@model Marimon.Models.Carrito

<link rel="stylesheet" href="~/css/indexCarrito.css" asp-append-version="true" />

<div class="container">
    <h1>Carrito</h1>

    <table>
        <thead>
            <tr>
                <th>Autoparte</th>
                <th>Precio</th>
                <th>Cantidad</th>
                <th>Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="productos-carrito">
            @foreach (var item in Model.CarritoAutopartes)
            {
                var autoparte = item.Autoparte;
                <tr id="producto-@item.carAut_id">
                    <td>
                        <img src="@autoparte.aut_imagen" alt="@autoparte.aut_nombre" width="50px">
                        @autoparte.aut_nombre
                    </td>
                    <td>S/ @autoparte.aut_precio.ToString("0.00")</td>
                    <td>
                        <div class="cantidad-control">
                            <button class="decrease-btn" data-producto-id="@item.carAut_id">-</button>
                            <span id="cantidad-@item.carAut_id">@item.car_cantidad</span>
                            <button class="increase-btn" data-producto-id="@item.carAut_id">+</button>
                        </div>
                    </td>
                    <td class="subtotal" id="subtotal-@item.carAut_id">S/ @item.car_subtotal.ToString("0.00")</td>
                    <td>
                        <span class="remove-btn" data-producto-id="@item.carAut_id">×</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="resumen">
        <p><strong>Total:</strong> S/ <span id="total">@Model.car_total.ToString("0.00")</span></p>
        <a href="/checkout" class="btn-finalizar">Finalizar Compra</a>
    </div>
</div>
<script>
    // Recalcular el total de todos los productos
    function calcularTotal() {
        let total = 0;
        const subtotales = document.querySelectorAll('.subtotal');
        subtotales.forEach(subtotal => {
            total += parseFloat(subtotal.textContent.replace('S/ ', ''));
        });
        document.getElementById('total').textContent = total.toFixed(2);
    }

    // Aumentar/disminuir cantidad
    document.addEventListener('click', (e) => {
        if (e.target.classList.contains('decrease-btn') || e.target.classList.contains('increase-btn')) {
            const carritoId = @Model.car_id; // Asumiendo que esto es un valor dinámico
            const productoId = e.target.dataset.productoId;
            const cantidadSpan = document.getElementById('cantidad-' + productoId);
            let nuevaCantidad;

            if (e.target.classList.contains('decrease-btn')) {
                nuevaCantidad = Math.max(1, parseInt(cantidadSpan.textContent) - 1);
            } else {
                nuevaCantidad = parseInt(cantidadSpan.textContent) + 1;
            }

            console.log("carritoId:", carritoId);
            console.log("productoId:", productoId);
            console.log("nuevaCantidad:", nuevaCantidad);

            cantidadSpan.textContent = nuevaCantidad;

            // Usar AJAX para enviar la solicitud
            $.ajax({
                url: '@Url.Action("ActualizarCantidad", "Carrito")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ carritoId, productoId, nuevaCantidad }),
                success: function (data) {
                    // Actualizar subtotal
                    if (data.subtotal !== undefined) {
                        document.getElementById('subtotal-' + productoId).textContent = 'S/ ' + data.subtotal.toFixed(2);
                    }

                    // Recalcular total
                    calcularTotal();
                },
                error: function (xhr, status, error) {
                    console.error("Error al actualizar la cantidad", error);
                }
            });
        }
    });

    // Eliminar producto
    document.addEventListener('click', (e) => {
        if (e.target.classList.contains('remove-btn')) {
            const productoId = e.target.dataset.productoId;
            const carritoId = @Model.car_id;

            $.ajax({
                url: '@Url.Action("EliminarProducto", "Carrito")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ CarritoId: carritoId, ProductoId: productoId }),
                success: function (data) {
                    document.getElementById('producto-' + productoId).remove();
                    document.getElementById('total').textContent = data.total.toFixed(2);
                },
                error: function (xhr, status, error) {
                    console.error('Error al eliminar producto:', error);
                }
            });
        }
    });

    // Inicializar
    document.addEventListener('DOMContentLoaded', function () {
        calcularTotal();
    });
</script>
