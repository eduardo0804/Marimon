@model Marimon.Models.Carrito

<!-- Estilos Bootstrap y Font Awesome -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
<link rel="stylesheet" href="~/css/indexCarrito.css" asp-append-version="true" />

<div class="container my-5">
    <h1 class="text-center mb-5 fw-bold text-dark">
        <i class="fas fa-shopping-cart me-2"></i>Tu Carrito
    </h1>

    <div class="table-responsive rounded shadow-sm border">
        <table class="table table-hover text-center align-middle mb-0">
            <thead class="table-dark text-white">
                <tr>
                    <th>Autoparte</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="productos-carrito">
                @foreach (var item in Model.CarritoAutopartes)
                {
                    var autoparte = item.Autoparte;
                    <tr id="producto-@item.carAut_id" data-stock="@autoparte.aut_cantidad">
                        <td class="d-flex align-items-center gap-3 justify-content-center">
                            <img src="@autoparte.aut_imagen" alt="@autoparte.aut_nombre" width="60" class="rounded shadow-sm border">
                            <span class="fw-semibold">@autoparte.aut_nombre</span>
                        </td>
                        <td class="text-nowrap">S/ @autoparte.aut_precio.ToString("0.00")</td>
                        <td>
                            <div class="btn-group cantidad-control">
                                <button class="btn btn-outline-secondary decrease-btn" data-producto-id="@item.carAut_id">-</button>
                                <span id="cantidad-@item.carAut_id" class="px-3 fw-bold">@item.car_cantidad</span>
                                <button class="btn btn-outline-secondary increase-btn" data-producto-id="@item.carAut_id">+</button>
                            </div>
                        </td>
                        <td class="subtotal fw-bold text-dark" id="subtotal-@item.carAut_id">S/ @item.car_subtotal.ToString("0.00")</td>
                        <td>
                            <button class="btn btn-outline-danger remove-btn" data-producto-id="@item.carAut_id" title="Eliminar">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="resumen mt-5 p-4 bg-white border rounded shadow-sm">
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <p class="fs-4 fw-bold text-dark mb-2">Total: S/ <span id="total">@Model.car_total.ToString("0.00")</span></p>
            <a href="#" id="btn-finalizar" class="btn btn-dark btn-lg shadow">
                <i class="fas fa-check-circle me-2"></i>Finalizar Compra
            </a>
        </div>
        <p id="mensaje-error" class="text-danger mt-3 fw-semibold text-end"></p>
    </div>
</div>

<!-- Funcionalidad JavaScript (igual que antes) -->
<script>
    function calcularTotal() {
        let total = 0;
        document.querySelectorAll('.subtotal').forEach(sub => {
            total += parseFloat(sub.textContent.replace('S/ ', '')) || 0;
        });
        document.getElementById('total').textContent = total.toFixed(2);
    }

    document.addEventListener('click', function (e) {
        if (e.target.classList.contains('decrease-btn') || e.target.classList.contains('increase-btn')) {
            const carritoId = @Model.car_id;
            const productoId = e.target.dataset.productoId;
            const cantidadSpan = document.getElementById('cantidad-' + productoId);
            let cantidadActual = parseInt(cantidadSpan.textContent);
            let nuevaCantidad = cantidadActual;

            if (e.target.classList.contains('decrease-btn')) {
                nuevaCantidad = Math.max(1, cantidadActual - 1);
            } else {
                nuevaCantidad = cantidadActual + 1;
            }

            cantidadSpan.textContent = nuevaCantidad;

            $.ajax({
                url: '@Url.Action("ActualizarCantidad", "Carrito")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ carritoId, productoId, nuevaCantidad }),
                success: function (data) {
                    if (data.subtotal !== undefined) {
                        document.getElementById('subtotal-' + productoId).textContent = 'S/ ' + data.subtotal.toFixed(2);
                        calcularTotal();
                    }
                },
                error: function () {
                    console.error("Error al actualizar la cantidad.");
                }
            });
        }

        if (e.target.closest('.remove-btn')) {
            const btn = e.target.closest('.remove-btn');
            const productoId = btn.dataset.productoId;
            const carritoId = @Model.car_id;

            $.ajax({
                url: '@Url.Action("EliminarProducto", "Carrito")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ CarritoId: carritoId, ProductoId: productoId }),
                success: function (data) {
                    document.getElementById('producto-' + productoId).remove();
                    document.getElementById('total').textContent = data.total.toFixed(2);
                },
                error: function () {
                    console.error("Error al eliminar producto.");
                }
            });
        }
    });

    document.getElementById('btn-finalizar').addEventListener('click', function (e) {
        e.preventDefault();
        let hayError = false;
        let mensaje = "";

        document.querySelectorAll('#productos-carrito tr').forEach(row => {
            const stock = parseInt(row.dataset.stock);
            const cantidad = parseInt(row.querySelector('span[id^="cantidad-"]').textContent);
            if (cantidad > stock) {
                const nombre = row.querySelector('td span').innerText.trim();
                mensaje += `Cantidad de '${nombre}' supera el stock disponible.\n`;
                hayError = true;
            }
        });

        const mensajeError = document.getElementById('mensaje-error');
        if (hayError) {
            mensajeError.textContent = mensaje;
        } else {
            mensajeError.textContent = "";
            window.location.href = '/Comprobante';
        }
    });

    document.addEventListener('DOMContentLoaded', calcularTotal);
</script>
