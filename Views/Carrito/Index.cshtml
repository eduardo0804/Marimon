@model Marimon.Models.Carrito
@{
    ViewData["Title"] = "Carrito de Compras";
}
<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Estilos elegantes -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap">
    <link rel="stylesheet" href="~/css/indexCarrito.css" asp-append-version="true">


</head>

<body>
    <div class="container ">
        <div class="page-header text-center">
            <h1 class="fw-bold mb-3">
                <i class="fas fa-shopping-cart me-2"></i>Tu Carrito de Compras
            </h1>
            <p class="text-muted">Revisa y gestiona los productos que has seleccionado</p>
        </div>

        @if (Model.CarritoAutopartes.Any())
        {
            <div class="cart-table mb-5">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th class="text-start">Producto</th>
                            <th>Precio Unitario</th>
                            <th>Cantidad</th>
                            <th>Subtotal</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="productos-carrito">
                        @foreach (var item in Model.CarritoAutopartes)
                        {
                            var autoparte = item.Autoparte;
                            <tr id="producto-@item.carAut_id" data-stock="@autoparte.aut_cantidad" class="cart-item">
                                <td class="text-start">
                                    <div class="d-flex align-items-center">
                                        <img src="@autoparte.aut_imagen" alt="@autoparte.aut_nombre" class="product-img me-3">
                                        <div>
                                            <div class="product-name">@autoparte.aut_nombre</div>
                                            <small class="text-muted">Código: @autoparte.aut_id</small>
                                        </div>
                                    </div>
                                </td>
                                <td class="price">S/ @autoparte.aut_precio.ToString("0.00")</td>
                                <td>
                                    <div class="quantity-control">
                                        <button class="quantity-btn decrease-btn" data-producto-id="@item.carAut_id">-</button>
                                        <span id="cantidad-@item.carAut_id" class="quantity-input">@item.car_cantidad</span>
                                        <button class="quantity-btn increase-btn" data-producto-id="@item.carAut_id">+</button>
                                    </div>
                                </td>
                                <td class="subtotal price" id="subtotal-@item.carAut_id">S/ @item.car_subtotal.ToString("0.00")
                                </td>
                                <td>
                                    <button class="remove-btn" data-producto-id="@item.carAut_id" title="Eliminar">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="summary-card">
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <div>
                        <h5 class="text-muted mb-2">Total del Carrito</h5>
                        <div class="total-amount">S/ <span id="total">@Model.car_total.ToString("0.00")</span></div>
                    </div>
                    <div>
                        <button id="btn-finalizar" class="checkout-btn">
                            <i class="fas fa-check-circle me-2"></i>Finalizar Compra
                        </button>
                    </div>
                </div>
                <p id="mensaje-error" class="error-message mt-3 mb-0 text-end"></p>
            </div>
        }
        else
        {
            <div class="empty-cart bg-white rounded shadow-sm">
                <div class="empty-cart-icon">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <h3 class="mb-3">Tu carrito est vac�o</h3>
                <p class="text-muted mb-4">A�n no has agregado ning�n producto a tu carrito de compras.</p>
                <a href="/Catalogo" class="btn btn-dark px-4">
                    <i class="fas fa-arrow-left me-2"></i>Volver a la tienda
                </a>
            </div>
        }
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Funci�n para formatear n�meros como moneda
        function formatCurrency(amount) {
            return 'S/ ' + parseFloat(amount).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }

        // Funci�n para calcular el total del carrito
        function calcularTotal() {
            let total = 0;
            document.querySelectorAll('.subtotal').forEach(sub => {
                total += parseFloat(sub.textContent.replace('S/ ', '').replace(/,/g, '')) || 0;
            });
            document.getElementById('total').textContent = total.toFixed(2);
        }

        // Eventos para los botones de cantidad
        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('decrease-btn') || e.target.classList.contains('increase-btn')) {
                const carritoId = @Model.car_id;
                const productoId = e.target.dataset.productoId;
                const cantidadSpan = document.getElementById('cantidad-' + productoId);
                let cantidadActual = parseInt(cantidadSpan.textContent);
                let nuevaCantidad = cantidadActual;

                if (e.target.classList.contains('decrease-btn')) {
                    nuevaCantidad = Math.max(1, cantidadActual - 1);
                } else {
                    nuevaCantidad = cantidadActual + 1;
                }

                cantidadSpan.textContent = nuevaCantidad;

                $.ajax({
                    url: '@Url.Action("ActualizarCantidad", "Carrito")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ carritoId, productoId, nuevaCantidad }),
                    success: function (data) {
                        if (data.subtotal !== undefined) {
                            document.getElementById('subtotal-' + productoId).textContent = formatCurrency(data.subtotal);
                            calcularTotal();
                        }
                    },
                    error: function () {
                        console.error("Error al actualizar la cantidad.");
                    }
                });
            }

            // Eliminar producto del carrito
            if (e.target.closest('.remove-btn')) {
                const btn = e.target.closest('.remove-btn');
                const productoId = btn.dataset.productoId;
                const carritoId = @Model.car_id;
                const productoRow = document.getElementById('producto-' + productoId);

                // Animaci�n de eliminaci�n
                productoRow.style.transition = 'all 0.3s ease';
                productoRow.style.opacity = '0';
                productoRow.style.transform = 'translateX(-50px)';

                setTimeout(() => {
                    $.ajax({
                        url: '@Url.Action("EliminarProducto", "Carrito")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ CarritoId: carritoId, ProductoId: productoId }),
                        success: function (data) {
                            productoRow.remove();
                            document.getElementById('total').textContent = data.total.toFixed(2);

                            // Si no quedan productos, mostrar el carrito vac�o
                            if (document.querySelectorAll('#productos-carrito tr').length === 0) {
                                location.reload();
                            }
                        },
                        error: function () {
                            productoRow.style.opacity = '1';
                            productoRow.style.transform = 'translateX(0)';
                            console.error("Error al eliminar producto.");
                        }
                    });
                }, 300);
            }
        });

        // Finalizar compra
        document.getElementById('btn-finalizar')?.addEventListener('click', function (e) {
            e.preventDefault();
            let hayError = false;
            let mensaje = "";

            document.querySelectorAll('#productos-carrito tr').forEach(row => {
                const stock = parseInt(row.dataset.stock);
                const cantidad = parseInt(row.querySelector('span[id^="cantidad-"]').textContent);
                if (cantidad > stock) {
                    const nombre = row.querySelector('.product-name').innerText.trim();
                    mensaje += `� La cantidad de "${nombre}" (${cantidad}) supera el stock disponible (${stock}).\n`;
                    hayError = true;

                    // Resaltar la fila con error
                    row.style.backgroundColor = 'rgba(231, 76, 60, 0.1)';
                    setTimeout(() => {
                        row.style.backgroundColor = '';
                    }, 2000);
                }
            });

            const mensajeError = document.getElementById('mensaje-error');
            if (hayError) {
                mensajeError.innerHTML = '<strong>Error en stock:</strong><br>' + mensaje.replace(/\n/g, '<br>');
            } else {
                mensajeError.textContent = "";
                // Animaci�n del bot�n antes de redirigir
                this.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Procesando...';
                this.disabled = true;

                setTimeout(() => {
                    window.location.href = '/Comprobante';
                }, 1000);
            }
        });

        // Inicializaci�n
        document.addEventListener('DOMContentLoaded', function () {
            // Formatear todos los precios
            document.querySelectorAll('.price').forEach(el => {
                el.textContent = formatCurrency(el.textContent.replace('S/ ', ''));
            });

            calcularTotal();
        });
    </script>
</body>

</html>