@using Marimon.Enums
@model Marimon.Models.Reclamacion

@{
    ViewData["Title"] = "Libro de Reclamaciones";
    var usuario = ViewBag.Usuario as Marimon.Models.Usuario;
    var categorias = ViewBag.Categorias as List<Marimon.Models.Categoria>;
    var productos = ViewBag.Productos as List<Marimon.Models.Autoparte>;
    var servicios = ViewBag.Servicios as List<Marimon.Models.Servicio>;
}
<link rel="stylesheet" href="~/css/reclamacion.css" />
<h2>Libro de Reclamaciones</h2>

<form asp-action="CrearReclamacion" asp-controller="Reclamacion" method="post" id="reclamacionForm" novalidate>
    <input type="hidden" asp-for="UsuarioId" value="@usuario?.usu_id" />
    <div class="form-group mb-4 p-3 rounded" style="background-color: #f8f9fa; border: 1px solid #dee2e6;">
        <h5 class="mb-3" style="font-weight: 600; color: #D42025;">Datos de la Empresa</h5>
        <p>Conforme a lo establecido en el Código de Protección y Defensa del Consumidor, esta institución cuenta con un
            Libro de Reclamaciones a su disposición.</p>
        <ul style="padding-left: 20px; margin: 0; color: #212529; font-size: 15px;">
            <li><strong>Razón Social:</strong> MARIMON S.A.C</li>
            <li><strong>RUC:</strong> 20601635152</li>
            <li><strong>Dirección Fiscal:</strong> AV. ANGAMOS ESTE NRO. 1686 A.H. CASA HUERTAS LIMA - LIMA - SURQUILLO
            </li>
        </ul>
    </div>

    <div class="form-group">
        <label>Nombre</label>
        <input class="form-control" value="@usuario?.usu_nombre" readonly />
    </div>

    <div class="form-group">
        <label>Apellido</label>
        <input class="form-control" value="@usuario?.usu_apellido" readonly />
    </div>

    <div class="form-group">
        <label>Correo</label>
        <input class="form-control" value="@usuario?.usu_correo" readonly />
    </div>

    <div class="form-group">
        <label asp-for="TipoReclamacion">Tipo de Reclamación</label>
        <select asp-for="TipoReclamacion" class="form-control" id="tipoReclamacion" required>
            <option value="">-- Seleccione --</option>
            <option value="@((int)TipoReclamacion.Reclamo)">Reclamo</option>
            <option value="@((int)TipoReclamacion.Queja)">Queja</option>
        </select>
        <div class="invalid-feedback">Por favor, selecciona un tipo de reclamación.</div>
    </div>

    <div class="form-group">
        <label asp-for="TipoEntidad">Identificación del bien contratado</label>
        <select asp-for="TipoEntidad" class="form-control" id="tipoEntidad" required>
            <option value="">-- Seleccione --</option>
            <option value="@((int)TipoEntidad.Producto)">Producto</option>
            <option value="@((int)TipoEntidad.Servicio)">Servicio</option>
        </select>
        <div class="invalid-feedback">Por favor, selecciona un tipo de entidad.</div>
    </div>

    <div id="productoSection" style="display:none;">
        <div class="form-group">
            <label>Categoría</label>
            <select class="form-control" id="categoriaSelect" required>
                <option value="">-- Seleccione Categoría --</option>
                @foreach (var cat in categorias)
                {
                    <option value="@cat.cat_id">@cat.cat_nombre</option>
                }
            </select>
            <div class="invalid-feedback">Por favor, selecciona una categoría.</div>
        </div>

        <div class="form-group">
            <label>Producto</label>
            <select class="form-control" id="productoSelect" required>
                <option value="">-- Seleccione Producto --</option>
            </select>
            <div class="invalid-feedback">Por favor, selecciona un producto.</div>
        </div>

        <div class="form-group">
            <label>Número de Pedido</label>
            <input type="text" class="form-control" name="NumeroPedido" id="numeroPedido" />
            <div class="invalid-feedback">Por favor, ingresa el número de pedido.</div>
        </div>

        <div class="form-group">
            <label>Monto</label>
            <input type="number" asp-for="Monto" class="form-control" name="Monto" id="montoProducto" step="0.01"
                min="0" />
            <div class="invalid-feedback">Por favor, ingresa el monto del producto.</div>
        </div>
    </div>

    <div id="servicioSection" style="display:none;">
        <div class="form-group">
            <label>Servicio</label>
            <select id="servicioSelect" class="form-control" required>
                <option value="">-- Seleccione Servicio --</option>
                @foreach (var ser in servicios)
                {
                    <option value="@ser.ser_id">@ser.ser_nombre</option>
                }
            </select>
            <div class="invalid-feedback">Por favor, selecciona un servicio.</div>
        </div>

        <div class="form-group">
            <label>Número de Servicio</label>
            <input type="text" class="form-control" name="NumeroServicio" id="numeroServicio" />
            <div class="invalid-feedback">Por favor, ingresa el número de servicio.</div>
        </div>

        <div class="form-group">
            <label>Monto</label>
            <input type="number" asp-for="Monto" class="form-control" name="Monto" id="montoServicio" step="0.01"
                min="0" />
            <div class="invalid-feedback">Por favor, ingresa el monto del servicio.</div>
        </div>
    </div>

    <!-- Campos ocultos -->
    <input type="hidden" asp-for="EntidadId" id="hiddenEntidadId" name="EntidadId" />
    <input type="hidden" asp-for="NombreEntidad" id="hiddenNombreEntidad" name="NombreEntidad" />
    <input type="hidden" id="numeroReferencia" name="NumeroReferencia" />


    <div class="form-group">
        <label asp-for="Descripcion">Descripción</label>
        <textarea asp-for="Descripcion" class="form-control" id="descripcion" required></textarea>
        <div class="invalid-feedback">Por favor, ingresa una descripción.</div>
    </div>

    <button type="submit" class="btn btn-danger">Enviar Reclamación</button>
</form>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const tipoEntidad = document.getElementById("tipoEntidad");
            const productoSection = document.getElementById("productoSection");
            const servicioSection = document.getElementById("servicioSection");
            const categoriaSelect = document.getElementById("categoriaSelect");
            const productoSelect = document.getElementById("productoSelect");
            const servicioSelect = document.getElementById("servicioSelect");
            const hiddenEntidadId = document.getElementById("hiddenEntidadId");
            const hiddenNombreEntidad = document.getElementById("hiddenNombreEntidad");
            const montoProducto = document.getElementById("montoProducto");
            const numeroPedido = document.getElementById("numeroPedido");
            const montoServicio = document.getElementById("montoServicio");
            const numeroServicio = document.getElementById("numeroServicio");

            // 👇 NUEVO: Referencia al campo oculto que el backend espera
            const numeroReferencia = document.getElementById("numeroReferencia");

            const productos = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(productos));
            let submitted = false;

            tipoEntidad.addEventListener("change", function () {
                const tipo = tipoEntidad.value;
                if (tipo === "1") {
                    productoSection.style.display = "block";
                    servicioSection.style.display = "none";
                    categoriaSelect.setAttribute("required", "required");
                    productoSelect.setAttribute("required", "required");
                    servicioSelect.removeAttribute("required");
                } else if (tipo === "2") {
                    servicioSection.style.display = "block";
                    productoSection.style.display = "none";
                    servicioSelect.setAttribute("required", "required");
                    categoriaSelect.removeAttribute("required");
                    productoSelect.removeAttribute("required");
                } else {
                    productoSection.style.display = "none";
                    servicioSection.style.display = "none";
                    categoriaSelect.removeAttribute("required");
                    productoSelect.removeAttribute("required");
                    servicioSelect.removeAttribute("required");
                }

                categoriaSelect.value = "";
                productoSelect.innerHTML = '<option value="">-- Seleccione Producto --</option>';
                servicioSelect.value = "";
                hiddenEntidadId.value = "";
                hiddenNombreEntidad.value = "";

                limpiarValidaciones();
            });

            categoriaSelect.addEventListener("change", function () {
                const categoriaId = parseInt(this.value);
                productoSelect.innerHTML = '<option value="">-- Seleccione Producto --</option>';
                if (!isNaN(categoriaId)) {
                    const productosFiltrados = productos.filter(p => p.categoriaId === categoriaId || p.CategoriaId === categoriaId);
                    productosFiltrados.forEach(p => {
                        const option = document.createElement("option");
                        option.value = p.aut_id;
                        option.text = p.aut_nombre;
                        productoSelect.appendChild(option);
                    });
                }
            });

            const form = document.getElementById('reclamacionForm');

            function limpiarValidaciones() {
                [tipoEntidad, categoriaSelect, productoSelect, servicioSelect, form.querySelector('#tipoReclamacion'), form.querySelector('#descripcion')].forEach(el => {
                    if (el) {
                        el.classList.remove("is-invalid");
                        el.classList.remove("is-valid");
                    }
                });
            }

            function validarCampo(campo) {
                if (!campo) return true;
                if (!campo.value || campo.value.trim() === "") {
                    campo.classList.add("is-invalid");
                    campo.classList.remove("is-valid");
                    return false;
                } else {
                    campo.classList.remove("is-invalid");
                    campo.classList.add("is-valid");
                    return true;
                }
            }

            function validarCamposVisibles() {
                let valido = true;

                if (!validarCampo(form.querySelector('#tipoReclamacion'))) valido = false;
                if (!validarCampo(tipoEntidad)) valido = false;

                if (productoSection.style.display === 'block') {
                    if (!validarCampo(categoriaSelect)) valido = false;
                    if (!validarCampo(productoSelect)) valido = false;
                    if (!validarCampo(numeroPedido)) valido = false;
                    if (!validarCampo(montoProducto)) valido = false;
                } else if (servicioSection.style.display === 'block') {
                    if (!validarCampo(servicioSelect)) valido = false;
                    if (!validarCampo(numeroServicio)) valido = false;
                    if (!validarCampo(montoServicio)) valido = false;
                }

                if (!validarCampo(form.querySelector('#descripcion'))) valido = false;

                return valido;
            }

            form.addEventListener('submit', function (event) {
                submitted = true;
                limpiarValidaciones();

                if (!validarCamposVisibles()) {
                    event.preventDefault();
                    event.stopPropagation();
                    return false;
                }

                let entidadId = "";
                let nombreEntidad = "";

                if (productoSection.style.display === 'block') {
                    if (productoSelect.value) {
                        entidadId = productoSelect.value;
                        nombreEntidad = productoSelect.options[productoSelect.selectedIndex]?.text || "";
                    }
                    // 👇 Copiar el valor de numeroPedido a numeroReferencia
                    numeroReferencia.value = numeroPedido.value;
                } else if (servicioSection.style.display === 'block') {
                    if (servicioSelect.value) {
                        entidadId = servicioSelect.value;
                        nombreEntidad = servicioSelect.options[servicioSelect.selectedIndex]?.text || "";
                    }
                    // 👇 Copiar el valor de numeroServicio a numeroReferencia
                    numeroReferencia.value = numeroServicio.value;
                }

                hiddenEntidadId.value = entidadId;
                hiddenNombreEntidad.value = nombreEntidad;
            });

            [tipoEntidad, categoriaSelect, productoSelect, servicioSelect, form.querySelector('#tipoReclamacion'), form.querySelector('#descripcion')]
                .forEach(el => {
                    if (!el) return;
                    el.addEventListener('blur', function () {
                        if (!submitted) return;
                        validarCampo(el);
                    });
                    el.addEventListener('input', function () {
                        if (!submitted) return;
                        validarCampo(el);
                    });
                });
        });
    </script>
}