@model Marimon.Models.Salida
@{
    ViewData["Title"] = "Registro de Salidas";
    Layout = "_LayoutAdmin";
}

<!-- Contenido Principal -->
<div class="container mt-4">
    <!-- Título y descripción -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow border-0 rounded-lg overflow-hidden">
                <div class="card-body d-flex p-0">
                    <div class="bg-danger text-white p-4 d-flex align-items-center justify-content-center"
                         style="background-color: #d42025 !important; min-width: 120px;">
                        <img src="~/images/salida.png" alt="Imagen almacén" class="img-fluid"
                             style="max-width: 80px;" />
                    </div>
                    <div class="p-4">
                        <h2 class="fw-bold mb-2">Registro de Salidas</h2>
                        <p class="text-muted mb-0">
                            En esta sección podrá registrar las salidas de autopartes del
                            inventario. Seleccione los productos que desea retirar y registre la cantidad.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Alertas con animación -->
    @if (TempData["Mensaje"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show shadow-sm border-start border-success border-4 rounded-3"
             role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["Mensaje"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show shadow-sm border-start border-danger border-4 rounded-3"
             role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <!-- Formulario de registro (Columna izquierda) -->
        <div class="col-lg-5 mb-4">
            <div class="card shadow-sm border-0 rounded-lg h-100">
                <div class="card-header bg-white py-3 border-bottom">
                    <h5 class="text-center mb-0 fw-bold">REGISTRAR SALIDA</h5>
                </div>
                <div class="card-body p-4">
                    <form asp-action="RegistrarSalida" asp-controller="Personal_Ventas" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="mb-4">
                            <label for="CategoriaId" class="form-label fw-semibold">Categoría de artículo</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-tags"></i></span>
                                <select id="categoriaSelect" class="form-select py-2" name="CategoriaId"
                                        asp-items="ViewBag.Categorias" onchange="cargarProductos()">
                                    <option value="">-- Seleccionar Categoría --</option>
                                </select>
                            </div>
                            <span class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="AutoparteId" class="form-label fw-semibold">Autoparte</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-box"></i></span>
                                <select id="productoSelect" class="form-select py-2" name="AutoparteId" disabled>
                                    <option value="">-- Primero seleccione una categoría --</option>
                                </select>
                            </div>
                            <span class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="sal_cantidad" class="form-label fw-semibold">Cantidad</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-cubes"></i></span>
                                <input name="sal_cantidad" id="sal_cantidad" type="number" class="form-control py-2"
                                       min="1" value="1">
                                <button type="button" class="btn btn-outline-secondary"
                                        onclick="document.getElementById('sal_cantidad').stepUp()">
                                    <i class="fas fa-plus"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary"
                                        onclick="document.getElementById('sal_cantidad').stepDown()">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                            <span class="text-danger"></span>
                        </div>

                        <!-- Campo oculto para la fecha -->
                        <input type="hidden" name="sal_fechasalida" value="@DateOnly.FromDateTime(DateTime.Now)" />

                        <div class="d-grid gap-2 mt-4">
                            <button type="submit"
                                    class="btn py-2 text-white fw-bold position-relative overflow-hidden btn-registro"
                                    id="submitButton">
                                <i class="fas fa-plus-circle me-2"></i>REGISTRAR SALIDA
                                <span class="hover-overlay"></span>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Tabla de registros (Columna derecha) -->
        <div class="col-lg-7 mb-4">
            <div class="card shadow-sm border-0 rounded-lg h-100">
                <div class="card-header bg-white py-3 border-bottom d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 fw-bold">HISTORIAL DE SALIDAS</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                        <table class="table table-hover mb-0" id="entriesTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0 ps-3">ID</th>
                                    <th class="border-0">Autoparte</th>
                                    <th class="border-0">Cantidad</th>
                                    <th class="border-0">Imagen</th>
                                    <th class="border-0">Fecha</th>
                                    <th class="border-0">Estado</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (ViewBag.ListaSalidas != null)
                                {
                                    @foreach (var salida in ViewBag.ListaSalidas)
                                    {
                                        <tr class="align-middle">
                                            <td class="ps-3 fw-semibold">@salida.sal_id</td>
                                            <td>@salida.Autoparte.aut_nombre</td>
                                            <td><span class="badge bg-success rounded-pill">@salida.sal_cantidad</span></td>
                                            <td>
                                                <div class="avatar-item">
                                                    <img src="@salida.Autoparte.aut_imagen" alt="@salida.Autoparte.aut_nombre"
                                                         title="@salida.Autoparte.aut_nombre" class="rounded" width="36" />
                                                </div>
                                            </td>
                                            <td>@salida.sal_fechasalida.ToString("dd-MM-yyyy")</td>
                                            <td>
                                                @{
                                                    // Estado predeterminado es "Pendiente"
                                                    string estadoActual = "Pendiente";
                                                    string estadoGuardado = null;

                                                    // Si existe un valor en StripeSessionId, el estado es "Completado"
                                                    if (salida.Comprobante?.Venta?.StripeSessionId != null)
                                                    {
                                                        estadoActual = "Completado";
                                                    }

                                                    // Comprobar si hay un valor guardado en TempData para esta salida
                                                    string tempDataKey = $"Estado_Salida_{salida.sal_id}";
                                                    if (TempData[tempDataKey] != null)
                                                    {
                                                        estadoGuardado = TempData[tempDataKey].ToString();
                                                        estadoActual = estadoGuardado;

                                                        // Mantener el valor para la siguiente carga de página
                                                        TempData.Keep(tempDataKey);
                                                    }

                                                    string btnClass = "btn-warning"; // Predeterminado para Pendiente

                                                    if (estadoActual == "Completado")
                                                    {
                                                        btnClass = "btn-success";
                                                    }
                                                    else if (estadoActual == "Cancelado")
                                                    {
                                                        btnClass = "btn-danger";
                                                    }
                                                }
                                                <button type="button"
                                                        class="btn btn-sm @btnClass"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#estadoModal"
                                                        data-id="@salida.sal_id"
                                                        data-estado="@estadoActual">
                                                    @estadoActual
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-3">
                                            No hay registros de salidas disponibles
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal para cambiar estado -->
    <div class="modal fade" id="estadoModal" tabindex="-1" aria-labelledby="estadoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-controller="Personal_Ventas" asp-action="CambiarEstadoAvanzado" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title" id="estadoModalLabel">Cambiar Estado</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body">
                        <p>Selecciona el nuevo estado para esta salida:</p>
                        <input type="hidden" id="salidaIdInput" name="id" />
                        <div class="mb-3">
                            <label for="estadoSelect" class="form-label">Estado</label>
                            <select id="estadoSelect" name="estado" class="form-select">
                                <option value="Completado">Completado</option>
                                <option value="Pendiente">Pendiente</option>
                                <option value="Cancelado">Cancelado</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            // Función para cargar productos por categoría
            function cargarProductos() {
                var categoriaId = document.getElementById("categoriaSelect").value;
                var productoSelect = document.getElementById("productoSelect");

                // Limpiar el select de productos
                productoSelect.innerHTML = "";

                if (!categoriaId) {
                    // Si no hay categoría seleccionada
                    productoSelect.innerHTML = "<option value=''>-- Primero seleccione una categoría --</option>";
                    productoSelect.disabled = true;
                    return;
                }

                // Habilitar el select de productos
                productoSelect.disabled = false;

                // Llamada AJAX para obtener los productos de la categoría seleccionada
                fetch(`/Personal_Ventas/ObtenerProductosPorCategoria?categoriaId=${categoriaId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Error en la respuesta del servidor');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.length === 0) {
                            productoSelect.innerHTML = "<option value=''>No hay productos disponibles</option>";
                        } else {
                            productoSelect.innerHTML = "<option value=''>-- Seleccionar Producto --</option>";
                            data.forEach(producto => {
                                var option = document.createElement("option");
                                option.value = producto.aut_id;
                                option.text = producto.aut_nombre;
                                productoSelect.appendChild(option);
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error al cargar los productos:", error);
                        productoSelect.innerHTML = "<option value=''>Error al cargar productos</option>";
                    });
            }

            // Efecto de hover para el botón
            document.addEventListener('DOMContentLoaded', function () {
                // Aplicar el estilo directamente al botón
                const submitButton = document.getElementById('submitButton');
                if (submitButton) {
                    // Asegurarse de que el botón sea visible y tenga el color correcto
                    submitButton.style.backgroundColor = '#d42025';
                    submitButton.style.display = 'block';
                    submitButton.style.width = '100%';

                    submitButton.addEventListener('mouseover', function () {
                        this.style.backgroundColor = '#b91d21';
                        this.style.transform = 'translateY(-2px)';
                        this.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
                    });

                    submitButton.addEventListener('mouseout', function () {
                        this.style.backgroundColor = '#d42025';
                        this.style.transform = 'translateY(0)';
                        this.style.boxShadow = '0 2px 5px rgba(0, 0, 0, 0.2)';
                    });
                }
            });

            // Validación del formulario
            document.querySelector('form').addEventListener('submit', function (e) {
                const productoSelect = document.getElementById('productoSelect');
                const cantidadInput = document.getElementById('sal_cantidad');

                if (productoSelect.value === '') {
                    e.preventDefault();
                    alert('Por favor seleccione un producto');
                    return false;
                }

                if (cantidadInput.value < 1) {
                    e.preventDefault();
                    alert('La cantidad debe ser mayor a 0');
                    return false;
                }

                return true;
            });

            // Configuración del modal de estados
            const estadoModal = document.getElementById('estadoModal');

            estadoModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const estado = button.getAttribute('data-estado');
                const salidaId = button.getAttribute('data-id');

                // Configurar el modal con los datos actuales
                const input = document.getElementById('salidaIdInput');
                const select = document.getElementById('estadoSelect');
                input.value = salidaId;
                select.value = estado;
            });

            estadoModal.addEventListener('hidden.bs.modal', function () {
                // Limpiar el modal al cerrarlo
                document.getElementById('salidaIdInput').value = '';
                document.getElementById('estadoSelect').value = 'Pendiente';
            });
        </script>
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <style>
            /* Estilos generales incluidos directamente */

            /* Estilos para el botón de registro */
            .btn-registro {
                background-color: #d42025 !important;
                color: white !important;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
            }

                .btn-registro:hover {
                    background-color: #b91d21 !important;
                    transform: translateY(-2px);
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                }

                .btn-registro .hover-overlay {
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background-color: rgba(255, 255, 255, 0.2);
                    opacity: 0;
                    transition: opacity 0.3s ease;
                }

                .btn-registro:hover .hover-overlay {
                    opacity: 1;
                }

            .admin-container {
                max-width: 1500px;
                margin: 0 auto;
                background-color: #fff;
                border-radius: 8px;
                overflow: hidden;
                margin-top: 20px;
                margin-bottom: 20px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }

            /* Header */
            .modulo-header {
                width: 100%;
            }

            .modulo-title-bar {
                background-color: #d42025;
                color: white;
                padding: 15px 25px;
                text-align: left;
            }

            .modulo-title {
                margin: 0;
                font-size: 24px;
                font-weight: 600;
            }

            /* Footer de las tarjetas */
            .card-footer {
                background-color: #f8f9fa;
                color: #6c757d;
                padding: 12px;
                text-align: center;
            }

            /* Footer principal */
            .modulo-footer {
                background-color: #d42025;
                color: white;
                padding: 15px 25px;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

                .modulo-footer a {
                    color: white;
                    text-decoration: none;
                }

                    .modulo-footer a:hover {
                        text-decoration: underline;
                    }

            /* Estilos específicos para esta página */
            .avatar-item {
                width: 36px;
                height: 36px;
                display: flex;
                align-items: center;
                justify-content: center;
                overflow: hidden;
                background-color: #f8f9fa;
                border-radius: 4px;
            }

            .pagination .page-item.active .page-link {
                background-color: #d42025;
                border-color: #d42025;
            }

            .pagination .page-link {
                color: #d42025;
            }

            /* Transiciones suaves */
            .form-control,
            .form-select,
            .btn {
                transition: all 0.3s ease;
            }

            /* Animación para alertas */
            .alert {
                animation: fadeInDown 0.5s ease;
            }

            /* Asegurarse de que el botón de registro sea visible y destacado */
            #submitButton {
                background-color: #d42025 !important;
                border: none;
                cursor: pointer;
                font-weight: bold;
                padding: 12px 20px;
                border-radius: 5px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                display: block;
                width: 100%;
            }

            /* Estilos para los botones de estado */
            .btn-success {
                background-color: #198754 !important;
            }

            .btn-warning {
                background-color: #ffc107 !important;
                color: #212529 !important;
            }

            .btn-danger {
                background-color: #dc3545 !important;
            }
        </style>
    }
