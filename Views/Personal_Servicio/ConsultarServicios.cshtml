@using Marimon.Enums
@model Marimon.ViewModel.ServicioReservaViewModel
@{
    ViewData["Title"] = "Consultar Servicios";
    Layout = "~/Views/Shared/_LayoutServicio.cshtml";
}

<style>
    /* Modernized styles */
    :root {
        --primary-color: #FF0000;
        --secondary-color: #f8f9fa;
        --accent-color: #4a90e2;
        --text-color: #333;
        --border-radius: 8px;
        --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        --transition: all 0.3s ease;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--text-color);
        background-color: #f5f7fa;
    }

    .page-header {
        text-align: center;
        padding-bottom: 1rem;
        position: relative;
    }

    .page-header h2 {
        font-weight: 600;
        color: var(--primary-color);
        display: inline-block;
        position: relative;
    }

    .page-header h2:after {
        content: '';
        position: absolute;
        width: 60%;
        height: 3px;
        background-color: var(--primary-color);
        bottom: -8px;
        left: 50%;
        transform: translateX(-50%);
    }

    /* Filter Panel Styles */
    .filter-panel {
        background-color: white;
        border-radius: var(--border-radius);
        padding: 1.5rem;
        box-shadow: var(--box-shadow);
        height: 100%;
        border-top: 4px solid var(--primary-color);
    }

    .filter-panel h5 {
        font-weight: 600;
        color: var(--primary-color);
    }

    .services-container {
        max-height: 150px;
        overflow: hidden;
        transition: var(--transition);
    }

    .services-container.expanded {
        max-height: 1000px;
    }

    .service-checkbox {
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        padding: 0.35rem 0.5rem;
        border-radius: 4px;
        transition: var(--transition);
    }

    .service-checkbox:hover {
        background-color: rgba(0, 0, 0, 0.02);
    }

    .service-checkbox input[type="checkbox"] {
        margin-right: 0.75rem;
        width: 18px;
        height: 18px;
        accent-color: var(--primary-color);
    }

    .service-checkbox label {
        font-size: 0.95rem;
        margin-bottom: 0;
        cursor: pointer;
    }

    .show-more-btn {
        color: var(--accent-color);
        background: none;
        border: none;
        padding: 0.5rem 0;
        font-weight: 500;
        cursor: pointer;
        display: flex;
        align-items: center;
        width: 100%;
        justify-content: center;
        border-top: 1px solid #eee;
        margin-top: 0.5rem;
    }

    .show-more-btn:hover {
        text-decoration: underline;
    }

    .show-more-btn i {
        margin-left: 0.25rem;
        font-size: 0.8rem;
        transition: var(--transition);
    }

    .show-more-btn:hover i {
        transform: translateY(2px);
    }

    .date-filter label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        font-size: 0.9rem;
    }

    .date-filter input {
        width: 100%;
        padding: 0.6rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        transition: var(--transition);
        background-color: #f9f9f9;
    }

    .date-filter input:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        outline: none;
        background-color: white;
    }

    .filter-btn {
        width: 100%;
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .filter-btn i {
        margin-right: 0.5rem;
    }

    .filter-btn:hover {
        background-color: #d00000;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Table Container Styles */
    .table-container {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        height: 100%;
        display: flex;
        flex-direction: column;
        border-top: 4px solid var(--primary-color);
    }

    .table-header {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #eee;
    }

    .table-header h5 {
        color: var(--primary-color);
        font-weight: 600;
    }

    .table-header .input-group {
        max-width: 300px;
    }

    .table-header .form-control {
        border-radius: 4px 0 0 4px;
        border-right: none;
    }

    .table-header .btn {
        border-radius: 0 4px 4px 0;
        border-color: #ddd;
    }

    .table-scroll-container {
        overflow-y: auto;
        max-height: 600px;
        flex-grow: 1;
    }

    /* Table Styles */
    .services-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background-color: white;
    }

    .services-table th {
        background-color: var(--primary-color);
        color: white;
        padding: 1rem;
        text-align: left;
        font-weight: 600;
        position: sticky;
        top: 0;
        z-index: 1;
    }

    .services-table th:first-child {
        border-top-left-radius: 4px;
    }

    .services-table th:last-child {
        border-top-right-radius: 4px;
    }

    .services-table td {
        padding: 1rem;
        border-bottom: 1px solid #eee;
    }

    .services-table tr:last-child td {
        border-bottom: none;
    }

    .services-table tr {
        transition: var(--transition);
        cursor: pointer;
    }

    .services-table tr:hover {
        background-color: rgba(74, 144, 226, 0.05);
        transform: translateY(-2px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .badge {
        padding: 0.35rem 0.75rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        display: inline-flex;
        align-items: center;
    }

    .badge::before {
        content: '';
        display: inline-block;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        margin-right: 5px;
    }

    .badge-pendiente {
        background-color: #fff4d9;
        color: #8a6d00;
    }

    .badge-pendiente::before {
        background-color: #ffc107;
    }

    .badge-confirmada {
        background-color: #e6f4ff;
        color: #0062cc;
    }

    .badge-confirmada::before {
        background-color: #007bff;
    }

    .badge-cancelada {
        background-color: #ffeaed;
        color: #b21e2c;
    }

    .badge-cancelada::before {
        background-color: #dc3545;
    }

    .badge-completada {
        background-color: #e8f6ed;
        color: #1e7e34;
    }

    .badge-completada::before {
        background-color: #28a745;
    }
</style>

<div class="container-fluid mt-4">
    <div class="page-header text-center mb-4">
        <h2>Consultar Servicios</h2>
    </div>

    <div class="row">
        <!-- Filters panel (Left side) -->
        <div class="col-lg-3">
            <div class="filter-panel">
                <h5 class="border-bottom pb-2 mb-3">Filtros de Búsqueda</h5>
                
                <div class="services-section">
                    <p class="fw-bold mb-2">Selecciona Servicios:</p>
                    <div class="services-container" id="servicesContainer">
                        @{
                            var displayedServices = Model.Servicios.Take(3).ToList();
                            var remainingServices = Model.Servicios.Skip(3).ToList();
                        }

                        @foreach (var servicio in displayedServices)
                        {
                            <div class="service-checkbox">
                                <input class="form-check-input" type="checkbox" name="servicios" 
                                       value="@servicio.ser_nombre" id="chk_@servicio.ser_nombre"
                                       @(Model.ServiciosSeleccionados.Contains(servicio.ser_nombre) ? "checked" : "") />
                                <label for="chk_@servicio.ser_nombre">@servicio.ser_nombre</label>
                            </div>
                        }

                        <div class="hidden-services" style="display: none;">
                            @foreach (var servicio in remainingServices)
                            {
                                <div class="service-checkbox">
                                    <input class="form-check-input" type="checkbox" name="servicios" 
                                          value="@servicio.ser_nombre" id="chk_@servicio.ser_nombre"
                                          @(Model.ServiciosSeleccionados.Contains(servicio.ser_nombre) ? "checked" : "") />
                                    <label for="chk_@servicio.ser_nombre">@servicio.ser_nombre</label>
                                </div>
                            }
                        </div>
                    </div>
                    
                    @if (remainingServices.Any())
                    {
                        <button type="button" class="show-more-btn" id="showMoreBtn">
                            Ver más servicios <i class="fas fa-chevron-down"></i>
                        </button>
                    }
                </div>

                <div class="date-filter mt-4">
                    <p class="fw-bold mb-2">Rango de Fechas:</p>
                    <div class="mb-3">
                        <label for="fechaDesde">Desde:</label>
                        <input type="date" id="fechaDesde" class="form-control"
                            value="@Context.Request.Query["fechaDesde"]" />
                    </div>
                    <div class="mb-3">
                        <label for="fechaHasta">Hasta:</label>
                        <input type="date" id="fechaHasta" class="form-control"
                            value="@Context.Request.Query["fechaHasta"]" />
                    </div>
                </div>

                <div class="mt-4">
                    <button class="filter-btn" onclick="filtrarReservas()">
                        <i class="fas fa-filter mr-2"></i> Aplicar Filtros
                    </button>
                </div>
            </div>
        </div>

        <!-- Table section (Right side) -->
        <div class="col-lg-9">
            <div class="table-container">
                <div class="table-header">
                    <div class="row align-items-center">
                        <div class="col">
                            <h5 class="mb-0">Listado de Servicios</h5>
                        </div>
                        <div class="col-auto">
                            <div class="input-group">
                                <input type="text" class="form-control" id="searchTable" placeholder="Buscar en tabla...">
                                <button class="btn btn-outline-secondary" type="button">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-scroll-container">
                    <table class="services-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>PLACA</th>
                                <th>FECHA</th>
                                <th>HORA</th>
                                <th>SERVICIO</th>
                                <th>USUARIO</th>
                                <th>ESTADO</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model?.Reservas != null && Model.Reservas.Any())
                            {
                                @foreach (var reserva in Model.Reservas)
                                {
                                    <tr class="table-row" data-id="@reserva.res_id">
                                        <td>@reserva.res_id</td>
                                        <td>@reserva.res_placa</td>
                                        <td>@reserva.res_fecha.ToShortDateString()</td>
                                        <td>@reserva.res_hora</td>
                                        <td>@reserva.Servicio?.ser_nombre</td>
                                        <td>@reserva.Usuario?.usu_nombre</td>
                                        <td>
                                            @switch (reserva.Estado)
                                            {
                                                case EstadoReserva.Pendiente:
                                                    <span class="badge badge-pendiente">Pendiente</span>
                                                    break;
                                                case EstadoReserva.Confirmada:
                                                    <span class="badge badge-confirmada">Confirmada</span>
                                                    break;
                                                case EstadoReserva.Cancelada:
                                                    <span class="badge badge-cancelada">Cancelada</span>
                                                    break;
                                                case EstadoReserva.Completada:
                                                    <span class="badge badge-completada">Completada</span>
                                                    break;
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center py-4">
                                        <div class="d-flex flex-column align-items-center">
                                            <i class="fas fa-search fa-3x text-muted mb-3"></i>
                                            <p class="mb-0">No hay servicios que coincidan con los filtros seleccionados.</p>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    // Show/hide additional services
    document.addEventListener('DOMContentLoaded', function() {
        const showMoreBtn = document.getElementById('showMoreBtn');
        const hiddenServices = document.querySelector('.hidden-services');
        const servicesContainer = document.getElementById('servicesContainer');
        
        if (showMoreBtn) {
            showMoreBtn.addEventListener('click', function() {
                if (hiddenServices.style.display === 'none') {
                    hiddenServices.style.display = 'block';
                    showMoreBtn.innerHTML = 'Ver menos servicios <i class="fas fa-chevron-up"></i>';
                    servicesContainer.classList.add('expanded');
                } else {
                    hiddenServices.style.display = 'none';
                    showMoreBtn.innerHTML = 'Ver más servicios <i class="fas fa-chevron-down"></i>';
                    servicesContainer.classList.remove('expanded');
                }
            });
        }
        
        // Row hover effect with subtle animation
        const tableRows = document.querySelectorAll('.table-row');
        tableRows.forEach(row => {
            row.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                // You can add functionality here to show more details or navigate to a details page
                console.log('Clicked on service ID:', id);
            });
        });
    });

    function filtrarReservas() {
        var checkboxes = document.querySelectorAll('input[name="servicios"]:checked');
        var serviciosSeleccionados = Array.from(checkboxes).map(cb => cb.value);
        var desde = document.getElementById("fechaDesde").value;
        var hasta = document.getElementById("fechaHasta").value;

        if (desde && hasta && new Date(desde) > new Date(hasta)) {
            alert("La fecha 'Hasta' debe ser mayor o igual a la fecha 'Desde'.");
            return;
        }

        var url = '@Url.Action("ConsultarServicios", "Personal_Servicio")' + '?';

        if (serviciosSeleccionados.length > 0) {
            url += 'nombreServicio=' + encodeURIComponent(serviciosSeleccionados.join(',')) + '&';
        }

        if (desde) url += 'fechaDesde=' + desde + '&';
        if (hasta) url += 'fechaHasta=' + hasta;

        window.location.href = url;
    }
</script>