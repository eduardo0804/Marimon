@using Marimon.Enums
@model Marimon.ViewModel.ServicioReservaViewModel
@{
    ViewData["Title"] = "Consultar Reserva de Servicios";
    Layout = "_LayoutServicio";
}
<link rel="stylesheet" href="~/css/manejarVenta.css" />

<div class="container-fluid mt-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a asp-area="" asp-controller="Personal_Servicio" asp-action="Index">Módulo de Servicio</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Consultar Reserva de Servicios</li>
    </ol>
    <div class="page-header text-center my-4">
        <h2>Consultar Reserva de Servicios</h2>
    </div>

    <div class="row">
        <!-- Filters panel (Left side) -->
        <div class="col-lg-3">
            <div class="filter-panel shadow-sm rounded-3">
                <div class="filter-header p-3 rounded-top">
                    <h5 class="mb-0 d-flex align-items-center">
                        <i class="fas fa-filter me-2 "></i>
                        <span>Filtrar resultados</span>
                    </h5>
                </div>

                <div class="services-section">
                    <p class="fw-bold mb-2">Selecciona Servicios:</p>
                    <div class="services-container" id="servicesContainer">
                        @{
                            var displayedServices = Model.Servicios.Take(3).ToList();
                            var remainingServices = Model.Servicios.Skip(3).ToList();
                        }

                        @foreach (var servicio in displayedServices)
                        {
                            <div class="service-checkbox">
                                <input class="form-check-input" type="checkbox" name="servicios"
                                    value="@servicio.ser_nombre" id="chk_@servicio.ser_nombre"
                                    @(Model.ServiciosSeleccionados.Contains(servicio.ser_nombre) ? "checked" : "") />
                                <label for="chk_@servicio.ser_nombre">@servicio.ser_nombre</label>
                            </div>
                        }

                        <div class="hidden-services" style="display: none;">
                            @foreach (var servicio in remainingServices)
                            {
                                <div class="service-checkbox">
                                    <input class="form-check-input" type="checkbox" name="servicios"
                                        value="@servicio.ser_nombre" id="chk_@servicio.ser_nombre"
                                        @(Model.ServiciosSeleccionados.Contains(servicio.ser_nombre) ? "checked" : "") />
                                    <label for="chk_@servicio.ser_nombre">@servicio.ser_nombre</label>
                                </div>
                            }
                        </div>
                    </div>

                    @if (remainingServices.Any())
                    {
                        <button type="button" class="show-more-btn" id="showMoreBtn">
                            Ver más servicios <i class="fas fa-chevron-down"></i>
                        </button>
                    }
                </div>

                <div class="date-filter mt-2">
                    <p class="fw-bold mb-2">Rango de Fechas:</p>
                    <div class="mb-3">
                        <label for="fechaDesde">Desde:</label>
                        <input type="date" id="fechaDesde" class="form-control"
                            value="@Context.Request.Query["fechaDesde"]" />
                    </div>
                    <div class="mb-3">
                        <label for="fechaHasta">Hasta:</label>
                        <input type="date" id="fechaHasta" class="form-control"
                            value="@Context.Request.Query["fechaHasta"]" />
                    </div>
                </div>
                <input type="hidden" id="estadoSeleccionado" value="@ViewBag.EstadoSeleccionado" />
                <div class="filter-body mt-2 p-3">
                    <h6 class="fw-bold mb-3">Filtrar por estado</h6>
                    <div class="status-filters">
                        <!-- Opción "Todos los estados" -->
                        <a href="javascript:void(0)" onclick="setEstado('')"
                            class="status-filter @(string.IsNullOrEmpty(ViewBag.EstadoSeleccionado) ? "active" : "")">
                            <div class="status-icon bg-secondary">
                                <i class="fas fa-list text-white"></i>
                            </div>
                            <span class="status-label">Todos los estados</span>
                            <span class="status-badge">@(ViewBag.ContadoresEstados != null ?
                                                                ViewBag.ContadoresEstados["Todos"] : Model.Reservas.Count())</span>
                        </a>

                        @if (ViewBag.Estados != null)
                        {
                            foreach (var est in ViewBag.Estados)
                            {
                                var count = ViewBag.ContadoresEstados != null ? ViewBag.ContadoresEstados[est] :
                                Model.Reservas.Count(v => v.Estado.ToString() == est);
                                var iconClass = "";
                                var bgClass = "";
                                switch (est)
                                {
                                    case "Pendiente":
                                        iconClass = "fa-clock";
                                        bgClass = "bg-warning";
                                        break;
                                    case "Confirmada":
                                        iconClass = "fa-check-circle";
                                        bgClass = "bg-info";
                                        break;
                                    case "Completada": // Verde para completada
                                        iconClass = "fa-check-double";
                                        bgClass = "bg-success";
                                        break;
                                    case "Cancelada":
                                        iconClass = "fa-times-circle";
                                        bgClass = "bg-danger";
                                        break;
                                    default:
                                        iconClass = "fa-circle";
                                        bgClass = "bg-secondary";
                                        break;
                                }

                                <a href="javascript:void(0)" onclick="setEstado('@est')"
                                    class="status-filter @(ViewBag.EstadoSeleccionado == est ? "active" : "")">
                                    <div class="status-icon @bgClass">
                                        <i class="fas @iconClass text-white"></i>
                                    </div>
                                    <span class="status-label">@est</span>
                                    <span class="status-badge">@count</span>
                                </a>
                            }
                        }
                    </div>
                </div>
                <div class="mt-4">
                    <button class="filter-btn" onclick="filtrarReservas()"
                        style="width: 250px !important; min-width: 250px !important; max-width: 150px !important; display: block !important; margin-left: auto !important; margin-right: auto !important;">
                        <i class="fas fa-filter"></i> Aplicar Filtros
                    </button>
                </div>
            </div>
        </div>
        <!-- Table section (Right side) -->
        <div class="col-lg-9">
            <div class="table-container fade-in">
                <div class="table-header">
                    <div class="row align-items-center">
                        <div class="col">
                            <h5 class="mb-0">Listado de Servicios</h5>
                        </div>
                        <div class="col-auto">
                            <div class="search-container">
                                <i class="fas fa-search search-icon"></i>
                                <input type="text" id="searchTable" placeholder="Buscar por ID de venta o autoparte...">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-scroll-container">
                    <table class="services-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>PLACA</th>
                                <th>FECHA</th>
                                <th>HORA</th>
                                <th>SERVICIO</th>
                                <th>USUARIO</th>
                                <th>ESTADO</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model?.Reservas != null && Model.Reservas.Any())
                            {
                                @foreach (var reserva in Model.Reservas)
                                {
                                    <tr class="table-row" data-id="@reserva.res_id">
                                        <td>@reserva.res_id</td>
                                        <td>@reserva.res_placa</td>
                                        <td>@reserva.res_fecha.ToShortDateString()</td>
                                        <td>@reserva.res_hora</td>
                                        <td>@reserva.Servicio?.ser_nombre</td>
                                        <td>@reserva.Usuario?.usu_nombre</td>
                                        <td>
                                            <a href="#" class="status-badge status-@reserva.Estado.ToString().ToLower()"
                                                data-bs-toggle="modal" data-bs-target="#cambiarEstadoModal"
                                                data-reserva-id="@reserva.res_id" data-estado-actual="@reserva.Estado">

                                                @switch (reserva.Estado)
                                                {
                                                    case EstadoReserva.Pendiente:
                                                        <i class="fas fa-clock"></i>
                                                        <span>Pendiente</span>
                                                        break;
                                                    case EstadoReserva.Confirmada:
                                                        <i class="fas fa-check-circle"></i>
                                                        <span>Confirmada</span>
                                                        break;
                                                    case EstadoReserva.Cancelada:
                                                        <i class="fas fa-times-circle"></i>
                                                        <span>Cancelada</span>
                                                        break;
                                                    case EstadoReserva.Completada:
                                                        <i class="fas fa-check-double"></i>
                                                        <span>Completada</span>
                                                        break;
                                                }
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center">
                                        <div class="empty-state">
                                            <i class="fas fa-search"></i>
                                            <p>No hay servicios que coincidan con los filtros seleccionados.</p>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modernized Status Change Modal -->
<div class="modal fade status-modal" id="cambiarEstadoModal" tabindex="-1" aria-labelledby="modalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <!-- Explicitly set the form action URL -->
        <form id="formCambiarEstado" method="post" action="@Url.Action("CambiarEstadoReserva", "Personal_Servicio")">
            @Html.AntiForgeryToken()
            <input type="hidden" name="reservaId" id="modalReservaId" />
            <input type="hidden" name="nuevoEstado" id="hiddenNuevoEstado" />
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLabel">Cambiar estado de la reserva</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Estado actual: <span id="estadoActualText"
                                class="fw-bold"></span></label>

                        <div class="status-select-container">
                            <p class="form-label mb-2">Selecciona el nuevo estado:</p>

                            <div class="status-option status-option-pendiente" data-value="Pendiente">
                                <input type="radio" class="status-option-input" name="statusRadio" id="estadoPendiente"
                                    value="Pendiente">
                                <i class="status-icon fas fa-clock"></i>
                                <span class="status-text">Pendiente</span>
                            </div>

                            <div class="status-option status-option-confirmada" data-value="Confirmada">
                                <input type="radio" class="status-option-input" name="statusRadio" id="estadoConfirmada"
                                    value="Confirmada">
                                <i class="status-icon fas fa-check-circle"></i>
                                <span class="status-text">Confirmada</span>
                            </div>

                            <div class="status-option status-option-cancelada" data-value="Cancelada">
                                <input type="radio" class="status-option-input" name="statusRadio" id="estadoCancelada"
                                    value="Cancelada">
                                <i class="status-icon fas fa-times-circle"></i>
                                <span class="status-text">Cancelada</span>
                            </div>

                            <div class="status-option status-option-completada" data-value="Completada">
                                <input type="radio" class="status-option-input" name="statusRadio" id="estadoCompletada"
                                    value="Completada">
                                <i class="status-icon fas fa-check-double"></i>
                                <span class="status-text">Completada</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn-save">Guardar cambios</button>
                    <button type="button" class="btn-cancel" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Toast notification container -->
<div class="toast-container" id="toastContainer"></div>
<script src="~/js/consultaSyV.js" asp-append-version="true"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Show/hide additional services
        const showMoreBtn = document.getElementById('showMoreBtn');
        const hiddenServices = document.querySelector('.hidden-services');
        const servicesContainer = document.getElementById('servicesContainer');

        if (showMoreBtn) {
            showMoreBtn.addEventListener('click', function () {
                if (hiddenServices.style.display === 'none') {
                    hiddenServices.style.display = 'block';
                    showMoreBtn.innerHTML = 'Ver menos servicios <i class="fas fa-chevron-up"></i>';
                    servicesContainer.classList.add('expanded');
                } else {
                    hiddenServices.style.display = 'none';
                    showMoreBtn.innerHTML = 'Ver más servicios <i class="fas fa-chevron-down"></i>';
                    servicesContainer.classList.remove('expanded');
                }
            });
        }

        // Table row click handler
        const tableRows = document.querySelectorAll('.table-row');
        tableRows.forEach(row => {
            row.addEventListener('click', function (e) {
                if (e.target.closest('.status-badge')) {
                    // If clicking on status badge, let the modal handle it
                    return;
                }
                const id = this.getAttribute('data-id');
                // You can add functionality here to show details or navigate
                console.log('Clicked on service ID:', id);
            });
        });

        // Search functionality
        const searchInput = document.getElementById('searchTable');
        if (searchInput) {
            searchInput.addEventListener('keyup', function () {
                searchTable(this.value, '.services-table');
            });
        }

        // Status change modal setup
        const modal = document.getElementById('cambiarEstadoModal');
        if (modal) {
            modal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const reservaId = button.getAttribute('data-reserva-id');
                const estadoActual = button.getAttribute('data-estado-actual');

                // Set modal values
                document.getElementById('modalReservaId').value = reservaId;
                document.getElementById('estadoActualText').textContent = estadoActual;
                document.getElementById('hiddenNuevoEstado').value = estadoActual;

                // Pre-select the current status radio
                const radioOptions = document.querySelectorAll('.status-option input[type="radio"]');
                radioOptions.forEach(option => {
                    option.checked = (option.value === estadoActual);
                    const optionLabel = option.closest('.status-option');

                    if (option.checked) {
                        optionLabel.classList.add('selected');
                    } else {
                        optionLabel.classList.remove('selected');
                    }
                });
            });
        }

        // Status option selection
        const statusOptions = document.querySelectorAll('.status-option');
        statusOptions.forEach(option => {
            option.addEventListener('click', function () {
                // Remove selected class from all options
                statusOptions.forEach(opt => opt.classList.remove('selected'));

                // Add selected class to clicked option
                this.classList.add('selected');

                // Set the hidden input value for form submission
                const radioInput = this.querySelector('input[type="radio"]');
                radioInput.checked = true;
                document.getElementById('hiddenNuevoEstado').value = radioInput.value;
            });
        });

        // Form submission with success notification
        const cambiarEstadoForm = document.getElementById('formCambiarEstado');
        if (cambiarEstadoForm) {
            cambiarEstadoForm.addEventListener('submit', function (e) {
                // For demo purposes, you can remove this preventDefault in production
                // e.preventDefault();

                showToast('Estado actualizado correctamente', 'success');

                // In production, the form will submit normally and redirect
                // after processing the controller action
            });
        }
    });
    function setEstado(estado) {
        // SOLO actualizar el valor hidden - NO recargar la página
        document.getElementById('estadoSeleccionado').value = estado;

        // Actualizar SOLO la clase active visual en los filtros de estado
        document.querySelectorAll('.status-filter').forEach(el => {
            el.classList.remove('active');
            // También remover clases de Bootstrap si existen
            el.classList.remove('bg-light', 'border-primary');
        });

        // Agregar clase active al filtro seleccionado
        event.currentTarget.classList.add('active');

        // *** IMPORTANTE: NO llamar filtrarReservas() aquí ***
        // Los filtros solo se aplicarán cuando presionen el botón "APLICAR FILTROS"
    }
    // Function to filter reservations
    function filtrarReservas() {
        var checkboxes = document.querySelectorAll('input[name="servicios"]:checked');
        var serviciosSeleccionados = Array.from(checkboxes).map(cb => cb.value);
        var desde = document.getElementById("fechaDesde").value;
        var hasta = document.getElementById("fechaHasta").value;
        var estado = document.getElementById("estadoSeleccionado").value;

        if (desde && hasta && new Date(desde) > new Date(hasta)) {
            showToast('La fecha "Hasta" debe ser mayor o igual a la fecha "Desde".', 'error');
            return;
        }

        var url = '@Url.Action("ConsultarServicios", "Personal_Servicio")' + '?';

        if (serviciosSeleccionados.length > 0) {
            url += 'nombreServicio=' + encodeURIComponent(serviciosSeleccionados.join(',')) + '&';
        }

        if (desde) url += 'fechaDesde=' + desde + '&';
        if (hasta) url += 'fechaHasta=' + hasta + '&';
        if (estado) url += 'estado=' + encodeURIComponent(estado);

        // SOLO aquí se recarga la página con los filtros aplicados
        window.location.href = url;
    }


    // Toast notification function
    function showToast(message, type = 'success') {
        const container = document.getElementById('toastContainer');

        // Create toast element
        const toast = document.createElement('div');
        toast.className = 'toast';

        // Set background color based on type
        let headerBgColor = 'var(--primary-color)';
        let headerIcon = 'fas fa-check-circle';

        if (type === 'error') {
            headerBgColor = 'var(--cancelada-color)';
            headerIcon = 'fas fa-exclamation-circle';
        }

        toast.innerHTML = `
            <div class="toast-header" style="background-color: ${headerBgColor}">
                <h6><i class="${headerIcon} me-2"></i> Notificación</h6>
                <button type="button" class="toast-close">&times;</button>
            </div>
            <div class="toast-body">
                ${message}
            </div>
        `;

        // Add to container
        container.appendChild(toast);

        // Close button functionality
        const closeBtn = toast.querySelector('.toast-close');
        closeBtn.addEventListener('click', function () {
            container.removeChild(toast);
        });

        // Auto remove after 4 seconds
        setTimeout(() => {
            if (container.contains(toast)) {
                container.removeChild(toast);
            }
        }, 4000);
    }

</script>